//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DJClientWPF.KaraokeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Venue", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class Venue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string venueAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int venueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string venueNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string venueAddress {
            get {
                return this.venueAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.venueAddressField, value) != true)) {
                    this.venueAddressField = value;
                    this.RaisePropertyChanged("venueAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int venueID {
            get {
                return this.venueIDField;
            }
            set {
                if ((this.venueIDField.Equals(value) != true)) {
                    this.venueIDField = value;
                    this.RaisePropertyChanged("venueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string venueName {
            get {
                return this.venueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.venueNameField, value) != true)) {
                    this.venueNameField = value;
                    this.RaisePropertyChanged("venueName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogInResponse", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class LogInResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.User userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long userKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long userKey {
            get {
                return this.userKeyField;
            }
            set {
                if ((this.userKeyField.Equals(value) != true)) {
                    this.userKeyField = value;
                    this.RaisePropertyChanged("userKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Song", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class Song : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string artistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int durationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathOnDiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ratingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string artist {
            get {
                return this.artistField;
            }
            set {
                if ((object.ReferenceEquals(this.artistField, value) != true)) {
                    this.artistField = value;
                    this.RaisePropertyChanged("artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int duration {
            get {
                return this.durationField;
            }
            set {
                if ((this.durationField.Equals(value) != true)) {
                    this.durationField = value;
                    this.RaisePropertyChanged("duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pathOnDisk {
            get {
                return this.pathOnDiskField;
            }
            set {
                if ((object.ReferenceEquals(this.pathOnDiskField, value) != true)) {
                    this.pathOnDiskField = value;
                    this.RaisePropertyChanged("pathOnDisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongRequest", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class SongRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int songIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int songID {
            get {
                return this.songIDField;
            }
            set {
                if ((this.songIDField.Equals(value) != true)) {
                    this.songIDField = value;
                    this.RaisePropertyChanged("songID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="queueSinger", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class queueSinger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.Song[] songsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.Song[] songs {
            get {
                return this.songsField;
            }
            set {
                if ((object.ReferenceEquals(this.songsField, value) != true)) {
                    this.songsField = value;
                    this.RaisePropertyChanged("songs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Achievement", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class Achievement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.AchievementImage imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPermanantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.AchievementSelect[] selectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool statementsAndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool visibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.AchievementImage image {
            get {
                return this.imageField;
            }
            set {
                if ((this.imageField.Equals(value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPermanant {
            get {
                return this.isPermanantField;
            }
            set {
                if ((this.isPermanantField.Equals(value) != true)) {
                    this.isPermanantField = value;
                    this.RaisePropertyChanged("isPermanant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.AchievementSelect[] selectList {
            get {
                return this.selectListField;
            }
            set {
                if ((object.ReferenceEquals(this.selectListField, value) != true)) {
                    this.selectListField = value;
                    this.RaisePropertyChanged("selectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool statementsAnd {
            get {
                return this.statementsAndField;
            }
            set {
                if ((this.statementsAndField.Equals(value) != true)) {
                    this.statementsAndField = value;
                    this.RaisePropertyChanged("statementsAnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool visible {
            get {
                return this.visibleField;
            }
            set {
                if ((this.visibleField.Equals(value) != true)) {
                    this.visibleField = value;
                    this.RaisePropertyChanged("visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementImage", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    public enum AchievementImage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image0 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image4 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image5 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image6 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image7 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image8 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image9 = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementSelect", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    [System.SerializableAttribute()]
    public partial class AchievementSelect : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.ClauseKeyword clauseKeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clauseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DJClientWPF.KaraokeService.SelectKeyword selectKeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string selectValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.ClauseKeyword clauseKeyword {
            get {
                return this.clauseKeywordField;
            }
            set {
                if ((this.clauseKeywordField.Equals(value) != true)) {
                    this.clauseKeywordField = value;
                    this.RaisePropertyChanged("clauseKeyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clauseValue {
            get {
                return this.clauseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.clauseValueField, value) != true)) {
                    this.clauseValueField = value;
                    this.RaisePropertyChanged("clauseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                if ((this.endDateField.Equals(value) != true)) {
                    this.endDateField = value;
                    this.RaisePropertyChanged("endDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DJClientWPF.KaraokeService.SelectKeyword selectKeyword {
            get {
                return this.selectKeywordField;
            }
            set {
                if ((this.selectKeywordField.Equals(value) != true)) {
                    this.selectKeywordField = value;
                    this.RaisePropertyChanged("selectKeyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string selectValue {
            get {
                return this.selectValueField;
            }
            set {
                if ((object.ReferenceEquals(this.selectValueField, value) != true)) {
                    this.selectValueField = value;
                    this.RaisePropertyChanged("selectValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                if ((this.startDateField.Equals(value) != true)) {
                    this.startDateField = value;
                    this.RaisePropertyChanged("startDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClauseKeyword", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    public enum ClauseKeyword : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Artist = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Title = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SongID = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectKeyword", Namespace="http://schemas.datacontract.org/2004/07/KServer")]
    public enum SelectKeyword : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountGTE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountLTE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Newest = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Oldest = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KaraokeService.IDJ")]
    public interface IDJ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJSignUp", ReplyAction="http://tempuri.org/IDJ/DJSignUpResponse")]
        DJClientWPF.KaraokeService.Response DJSignUp(string userName, string password, DJClientWPF.KaraokeService.Venue venue, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJSignIn", ReplyAction="http://tempuri.org/IDJ/DJSignInResponse")]
        DJClientWPF.KaraokeService.LogInResponse DJSignIn(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJSignOut", ReplyAction="http://tempuri.org/IDJ/DJSignOutResponse")]
        DJClientWPF.KaraokeService.Response DJSignOut(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJCreateSession", ReplyAction="http://tempuri.org/IDJ/DJCreateSessionResponse")]
        DJClientWPF.KaraokeService.Response DJCreateSession(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJStopSession", ReplyAction="http://tempuri.org/IDJ/DJStopSessionResponse")]
        DJClientWPF.KaraokeService.Response DJStopSession(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJGetQRNumber", ReplyAction="http://tempuri.org/IDJ/DJGetQRNumberResponse")]
        DJClientWPF.KaraokeService.Response DJGetQRNumber(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJGenerateNewQRNumber", ReplyAction="http://tempuri.org/IDJ/DJGenerateNewQRNumberResponse")]
        DJClientWPF.KaraokeService.Response DJGenerateNewQRNumber(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJAddSongs", ReplyAction="http://tempuri.org/IDJ/DJAddSongsResponse")]
        DJClientWPF.KaraokeService.Response DJAddSongs(DJClientWPF.KaraokeService.Song[] songs, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJRemoveSongs", ReplyAction="http://tempuri.org/IDJ/DJRemoveSongsResponse")]
        DJClientWPF.KaraokeService.Response DJRemoveSongs(DJClientWPF.KaraokeService.Song[] songs, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJListSongs", ReplyAction="http://tempuri.org/IDJ/DJListSongsResponse")]
        DJClientWPF.KaraokeService.Response DJListSongs(out DJClientWPF.KaraokeService.Song[] songs, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJGetMostPopularSongs", ReplyAction="http://tempuri.org/IDJ/DJGetMostPopularSongsResponse")]
        DJClientWPF.KaraokeService.Response DJGetMostPopularSongs(out DJClientWPF.KaraokeService.Song[] songs, out int[] counts, long DJKey, bool limitToVenue, int start, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJAddQueue", ReplyAction="http://tempuri.org/IDJ/DJAddQueueResponse")]
        DJClientWPF.KaraokeService.Response DJAddQueue(DJClientWPF.KaraokeService.SongRequest sr, int queueIndex, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJRemoveSongRequest", ReplyAction="http://tempuri.org/IDJ/DJRemoveSongRequestResponse")]
        DJClientWPF.KaraokeService.Response DJRemoveSongRequest(DJClientWPF.KaraokeService.SongRequest sr, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJChangeSongRequest", ReplyAction="http://tempuri.org/IDJ/DJChangeSongRequestResponse")]
        DJClientWPF.KaraokeService.Response DJChangeSongRequest(DJClientWPF.KaraokeService.SongRequest newSR, DJClientWPF.KaraokeService.SongRequest oldSR, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJMoveSongRequest", ReplyAction="http://tempuri.org/IDJ/DJMoveSongRequestResponse")]
        DJClientWPF.KaraokeService.Response DJMoveSongRequest(DJClientWPF.KaraokeService.SongRequest sr, int newIndex, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJRemoveUser", ReplyAction="http://tempuri.org/IDJ/DJRemoveUserResponse")]
        DJClientWPF.KaraokeService.Response DJRemoveUser(int userID, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJMoveUser", ReplyAction="http://tempuri.org/IDJ/DJMoveUserResponse")]
        DJClientWPF.KaraokeService.Response DJMoveUser(int userID, int index, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJGetQueue", ReplyAction="http://tempuri.org/IDJ/DJGetQueueResponse")]
        DJClientWPF.KaraokeService.Response DJGetQueue(out DJClientWPF.KaraokeService.queueSinger[] queue, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJPopQueue", ReplyAction="http://tempuri.org/IDJ/DJPopQueueResponse")]
        DJClientWPF.KaraokeService.Response DJPopQueue(DJClientWPF.KaraokeService.SongRequest sr, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJNewUserWaitTime", ReplyAction="http://tempuri.org/IDJ/DJNewUserWaitTimeResponse")]
        DJClientWPF.KaraokeService.Response DJNewUserWaitTime(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJTestQueueFill", ReplyAction="http://tempuri.org/IDJ/DJTestQueueFillResponse")]
        DJClientWPF.KaraokeService.Response DJTestQueueFill(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJBanUser", ReplyAction="http://tempuri.org/IDJ/DJBanUserResponse")]
        DJClientWPF.KaraokeService.Response DJBanUser(DJClientWPF.KaraokeService.User userToBan, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJUnbanUser", ReplyAction="http://tempuri.org/IDJ/DJUnbanUserResponse")]
        DJClientWPF.KaraokeService.Response DJUnbanUser(DJClientWPF.KaraokeService.User userToUnban, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJGetBannedUsers", ReplyAction="http://tempuri.org/IDJ/DJGetBannedUsersResponse")]
        DJClientWPF.KaraokeService.Response DJGetBannedUsers(out DJClientWPF.KaraokeService.User[] users, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJAddAchievement", ReplyAction="http://tempuri.org/IDJ/DJAddAchievementResponse")]
        DJClientWPF.KaraokeService.Response DJAddAchievement(DJClientWPF.KaraokeService.Achievement achievement, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJModifyAchievement", ReplyAction="http://tempuri.org/IDJ/DJModifyAchievementResponse")]
        DJClientWPF.KaraokeService.Response DJModifyAchievement(DJClientWPF.KaraokeService.Achievement achievement, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJDeleteAchievement", ReplyAction="http://tempuri.org/IDJ/DJDeleteAchievementResponse")]
        DJClientWPF.KaraokeService.Response DJDeleteAchievement(int achievementID, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJViewAchievements", ReplyAction="http://tempuri.org/IDJ/DJViewAchievementsResponse")]
        DJClientWPF.KaraokeService.Response DJViewAchievements(out DJClientWPF.KaraokeService.Achievement[] achievements, long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/DJEvaluateAchievements", ReplyAction="http://tempuri.org/IDJ/DJEvaluateAchievementsResponse")]
        DJClientWPF.KaraokeService.Response DJEvaluateAchievements(long DJKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/ViewAchievementSql", ReplyAction="http://tempuri.org/IDJ/ViewAchievementSqlResponse")]
        DJClientWPF.KaraokeService.Response ViewAchievementSql(long DJKey, int achievementID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDJ/InsertFauxSongHistory", ReplyAction="http://tempuri.org/IDJ/InsertFauxSongHistoryResponse")]
        DJClientWPF.KaraokeService.Response InsertFauxSongHistory(long DJKey, string[] bands, int numberPerBand, int mobileID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDJChannel : DJClientWPF.KaraokeService.IDJ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DJClient : System.ServiceModel.ClientBase<DJClientWPF.KaraokeService.IDJ>, DJClientWPF.KaraokeService.IDJ {
        
        public DJClient() {
        }
        
        public DJClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DJClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DJClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DJClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DJClientWPF.KaraokeService.Response DJSignUp(string userName, string password, DJClientWPF.KaraokeService.Venue venue, string email) {
            return base.Channel.DJSignUp(userName, password, venue, email);
        }
        
        public DJClientWPF.KaraokeService.LogInResponse DJSignIn(string userName, string password) {
            return base.Channel.DJSignIn(userName, password);
        }
        
        public DJClientWPF.KaraokeService.Response DJSignOut(long DJKey) {
            return base.Channel.DJSignOut(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJCreateSession(long DJKey) {
            return base.Channel.DJCreateSession(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJStopSession(long DJKey) {
            return base.Channel.DJStopSession(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJGetQRNumber(long DJKey) {
            return base.Channel.DJGetQRNumber(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJGenerateNewQRNumber(long DJKey) {
            return base.Channel.DJGenerateNewQRNumber(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJAddSongs(DJClientWPF.KaraokeService.Song[] songs, long DJKey) {
            return base.Channel.DJAddSongs(songs, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJRemoveSongs(DJClientWPF.KaraokeService.Song[] songs, long DJKey) {
            return base.Channel.DJRemoveSongs(songs, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJListSongs(out DJClientWPF.KaraokeService.Song[] songs, long DJKey) {
            return base.Channel.DJListSongs(out songs, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJGetMostPopularSongs(out DJClientWPF.KaraokeService.Song[] songs, out int[] counts, long DJKey, bool limitToVenue, int start, int count) {
            return base.Channel.DJGetMostPopularSongs(out songs, out counts, DJKey, limitToVenue, start, count);
        }
        
        public DJClientWPF.KaraokeService.Response DJAddQueue(DJClientWPF.KaraokeService.SongRequest sr, int queueIndex, long DJKey) {
            return base.Channel.DJAddQueue(sr, queueIndex, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJRemoveSongRequest(DJClientWPF.KaraokeService.SongRequest sr, long DJKey) {
            return base.Channel.DJRemoveSongRequest(sr, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJChangeSongRequest(DJClientWPF.KaraokeService.SongRequest newSR, DJClientWPF.KaraokeService.SongRequest oldSR, long DJKey) {
            return base.Channel.DJChangeSongRequest(newSR, oldSR, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJMoveSongRequest(DJClientWPF.KaraokeService.SongRequest sr, int newIndex, long DJKey) {
            return base.Channel.DJMoveSongRequest(sr, newIndex, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJRemoveUser(int userID, long DJKey) {
            return base.Channel.DJRemoveUser(userID, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJMoveUser(int userID, int index, long DJKey) {
            return base.Channel.DJMoveUser(userID, index, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJGetQueue(out DJClientWPF.KaraokeService.queueSinger[] queue, long DJKey) {
            return base.Channel.DJGetQueue(out queue, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJPopQueue(DJClientWPF.KaraokeService.SongRequest sr, long DJKey) {
            return base.Channel.DJPopQueue(sr, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJNewUserWaitTime(long DJKey) {
            return base.Channel.DJNewUserWaitTime(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJTestQueueFill(long DJKey) {
            return base.Channel.DJTestQueueFill(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJBanUser(DJClientWPF.KaraokeService.User userToBan, long DJKey) {
            return base.Channel.DJBanUser(userToBan, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJUnbanUser(DJClientWPF.KaraokeService.User userToUnban, long DJKey) {
            return base.Channel.DJUnbanUser(userToUnban, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJGetBannedUsers(out DJClientWPF.KaraokeService.User[] users, long DJKey) {
            return base.Channel.DJGetBannedUsers(out users, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJAddAchievement(DJClientWPF.KaraokeService.Achievement achievement, long DJKey) {
            return base.Channel.DJAddAchievement(achievement, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJModifyAchievement(DJClientWPF.KaraokeService.Achievement achievement, long DJKey) {
            return base.Channel.DJModifyAchievement(achievement, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJDeleteAchievement(int achievementID, long DJKey) {
            return base.Channel.DJDeleteAchievement(achievementID, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJViewAchievements(out DJClientWPF.KaraokeService.Achievement[] achievements, long DJKey) {
            return base.Channel.DJViewAchievements(out achievements, DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response DJEvaluateAchievements(long DJKey) {
            return base.Channel.DJEvaluateAchievements(DJKey);
        }
        
        public DJClientWPF.KaraokeService.Response ViewAchievementSql(long DJKey, int achievementID) {
            return base.Channel.ViewAchievementSql(DJKey, achievementID);
        }
        
        public DJClientWPF.KaraokeService.Response InsertFauxSongHistory(long DJKey, string[] bands, int numberPerBand, int mobileID) {
            return base.Channel.InsertFauxSongHistory(DJKey, bands, numberPerBand, mobileID);
        }
    }
}
