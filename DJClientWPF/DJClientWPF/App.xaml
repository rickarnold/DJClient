<Application x:Class="DJClientWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <SolidColorBrush x:Key="BackgroundBrush" Color="White"/>
        <SolidColorBrush x:Key="LabelBrush" Color="Black"/>
        <SolidColorBrush x:Key="InputBrushBackground" Color="White"/>
        <SolidColorBrush x:Key="InputBrushForeground" Color="Black"/>
        <SolidColorBrush x:Key="InputBrushBorder" Color="Silver"/>
        <SolidColorBrush x:Key="ComboboxBrushBackground" Color="White"/>


        <Style TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#202020" Offset="0"/>
                        <GradientStop Color="SlateGray" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#2ED7E2"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!-- Ensure that items in list box stretch horizontally to fill container and control color when selected-->
        <Style TargetType="ListBoxItem" x:Key="ContainerStyle">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#402ED7E2" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#202ED7E2" />
            </Style.Resources>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <Style TargetType="ListBox">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="White"/>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="ItemsControl">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="ItemsControl" x:Key="ItemsControlStyle">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>


        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush"
                Value="Silver"/>
            <Setter Property="BorderThickness"
                Value="2"/>
            <Setter Property="FontSize"
                Value="16"/>
            <Setter Property="FontWeight"
                Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="4"/>
                            </Grid.RowDefinitions>
                            <Border CornerRadius="8"
                              Grid.Row="1"
                              Grid.RowSpan="3"
                              Grid.Column="0"
                              Grid.ColumnSpan="4"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              BorderBrush="Transparent"
                              Background="{TemplateBinding Background}"/>
                            <!-- ContentPresenter for the header -->
                            <Border x:Name="Header"
                              Padding="6,0,6,0"
                              Grid.Row="0"
                              Grid.RowSpan="2"
                              Grid.Column="1">
                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" 
                                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                                  ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                                  ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                                  />
                            </Border>


                            <!-- Primary content for GroupBox -->
                            <ContentPresenter Grid.Row="2"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding Padding}"/>
                            <Border CornerRadius="8"
                                  Grid.Row="1"
                                  Grid.RowSpan="3"
                                  Grid.ColumnSpan="4"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.OpacityMask>
                                    <MultiBinding Converter=
                                        "{StaticResource BorderGapMaskConverter}"
                                            ConverterParameter="6">
                                        <Binding ElementName="Header"
                                            Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource Self}"
                                            Path="ActualWidth"/>
                                        <Binding RelativeSource="{RelativeSource Self}"
                                            Path="ActualHeight"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource LabelBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="Slider">
            <Setter Property="Foreground" Value="Red"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource LabelBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>
        
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{DynamicResource ComboboxBrushBackground}"/>
        </Style>

        <Style TargetType="{x:Type xctk:IntegerUpDown}">
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>
        
        <Style TargetType="DatePicker">
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}" />
        </Style>

        <Style TargetType="controls:AutoCompleteBox">
            <Setter Property="Background" Value="{DynamicResource InputBrushBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource InputBrushForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource InputBrushBorder}"/>
        </Style>

    </Application.Resources>
</Application>
